name: Release

on:
  push:
    branches:
      - main
      - testing
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install poetry
        poetry install

    - name: Run tests
      run: |
        source .venv/bin/activate
        poetry run pytest tests/unit/ -v --cov=spec_cli --cov-fail-under=80

    - name: Run type checking
      run: |
        source .venv/bin/activate
        poetry run mypy spec_cli/

    - name: Run linting
      run: |
        source .venv/bin/activate
        poetry run ruff check .
        poetry run ruff format --check .

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install poetry
        poetry install

    - name: Build package
      run: |
        source .venv/bin/activate
        poetry build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-test:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/testing'
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/spec-ai
    permissions:
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install poetry
        poetry install

    - name: Update package name for test-pypi
      run: |
        source .venv/bin/activate
        # Change package name to spec-ai for test-pypi
        sed -i 's/name = "spec"/name = "spec-ai"/' pyproject.toml

    - name: Build package for test-pypi
      run: |
        source .venv/bin/activate
        poetry build

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

  publish-prod:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/spec-ai
    permissions:
      id-token: write
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true

  create-release:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
